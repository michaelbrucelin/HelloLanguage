# f-string，格式化字符串的语法糖，Python 3.6开始支持，据说性能也比.format()方法略胜一筹
# 与C#的 $"{}...{}"基本一致，这里使用f或F代替$

# 1. 格式化字符串
year = 2016
f"XXX成立于{year}年。"
f"1+2={1+2}, 2的平方是{pow(2, 2)}, 3的立方是{pow(3, 3)}."
name, python = "micha", "Python"
f"我叫{name}，我爱{0}，{0}真的很爽。"
a, z, kuohao = "A", "Z", "{}"
f"{a}-{kuohao}-{z}"  # A-{}-Z  输出 {}
f"{a}-{{}}-{z}"      # A-{}-Z  输出 {}

f"{250:^}"               # '250'
f"{250:^10}"             # '   250    '
f"{250:>10}{520:<10}"    # '       250520       '
f"{250:<10}{520:>10}"    # '250              520'
f"{520:010}"             # '0000000520'
f"{-520:010}"            # '-000000520'
f"{'Python':010}"        # 设置前导0只对数字有效，字符串会抛异常
f"{250:%>10}{520:%<10}"  # '%%%%%%%250520%%%%%%%'
f"{520:0=10}"            # '0000000520'
f"{-520:0=10}"           # '-000000520'

f"{520:+} {-250:-}"       # '+520 -250'
f"{12345678:,}"           # '12,345,678'
f"{12345678:_}"           # '12_345_678'
f"{3.1415926:.4f}"        # '3.1416'
f"{3.1415926:.4g}"        # '3.142'
f"{'I love Python.':.6}"  # 'I love'
f"{1024:.2}"              # 精度格式化对整型无效，抛异常

f"{80:b}"   # '1010000'
f"{80:#b}"  # '0b1010000'
f"{80:c}"   # 'P'  Unicode字符
f"{80:d}"   # '80'
f"{80:o}"   # '120'
f"{80:#o}"  # '0o120'
f"{80:x}"   # '50'
f"{80:#x}"  # '0x50'
f"{80:#X}"  # '0X50'

f"{3.14:e}"       # '3.140000e+00'
f"{3.14:E}"       # '3.140000E+00'
f"{3.14:f}"       # '3.140000'
f"{12345678:g}"   # '1.23457e+07'
f"{1234.5678:g}"  # '1234.57'
f"{0.98:%}"       # '98.000000%'
f"{0.98:.2%}"     # '98.00%'

prec = 2
f"{3.1415926:.{prec}f}"  # '3.14'
fill, align, width, prec, ty = '+', '^', 10, 3, 'g'
f"{3.1415926:{fill}{align}{width}.{prec}{ty}}"  # '+++3.14+++'
